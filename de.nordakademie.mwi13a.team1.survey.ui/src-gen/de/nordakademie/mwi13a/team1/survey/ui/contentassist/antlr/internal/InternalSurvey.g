/*
* generated by Xtext
*/
grammar InternalSurvey;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.nordakademie.mwi13a.team1.survey.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.nordakademie.mwi13a.team1.survey.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.nordakademie.mwi13a.team1.survey.services.SurveyGrammarAccess;

}

@parser::members {
 
 	private SurveyGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SurveyGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSurvey
entryRuleSurvey 
:
{ before(grammarAccess.getSurveyRule()); }
	 ruleSurvey
{ after(grammarAccess.getSurveyRule()); } 
	 EOF 
;

// Rule Survey
ruleSurvey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getSurveyAccess().getQuestionnaireAssignment()); }
(rule__Survey__QuestionnaireAssignment)
{ after(grammarAccess.getSurveyAccess().getQuestionnaireAssignment()); }
)
(
{ before(grammarAccess.getSurveyAccess().getQuestionnaireAssignment()); }
(rule__Survey__QuestionnaireAssignment)*
{ after(grammarAccess.getSurveyAccess().getQuestionnaireAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuestionnaire
entryRuleQuestionnaire 
:
{ before(grammarAccess.getQuestionnaireRule()); }
	 ruleQuestionnaire
{ after(grammarAccess.getQuestionnaireRule()); } 
	 EOF 
;

// Rule Questionnaire
ruleQuestionnaire
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuestionnaireAccess().getGroup()); }
(rule__Questionnaire__Group__0)
{ after(grammarAccess.getQuestionnaireAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePart
entryRulePart 
:
{ before(grammarAccess.getPartRule()); }
	 rulePart
{ after(grammarAccess.getPartRule()); } 
	 EOF 
;

// Rule Part
rulePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPartAccess().getGroup()); }
(rule__Part__Group__0)
{ after(grammarAccess.getPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuestion
entryRuleQuestion 
:
{ before(grammarAccess.getQuestionRule()); }
	 ruleQuestion
{ after(grammarAccess.getQuestionRule()); } 
	 EOF 
;

// Rule Question
ruleQuestion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuestionAccess().getGroup()); }
(rule__Question__Group__0)
{ after(grammarAccess.getQuestionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnswer
entryRuleAnswer 
:
{ before(grammarAccess.getAnswerRule()); }
	 ruleAnswer
{ after(grammarAccess.getAnswerRule()); } 
	 EOF 
;

// Rule Answer
ruleAnswer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnswerAccess().getGroup()); }
(rule__Answer__Group__0)
{ after(grammarAccess.getAnswerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextLn
entryRuleTextLn 
:
{ before(grammarAccess.getTextLnRule()); }
	 ruleTextLn
{ after(grammarAccess.getTextLnRule()); } 
	 EOF 
;

// Rule TextLn
ruleTextLn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextLnAccess().getGroup()); }
(rule__TextLn__Group__0)
{ after(grammarAccess.getTextLnAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextBl
entryRuleTextBl 
:
{ before(grammarAccess.getTextBlRule()); }
	 ruleTextBl
{ after(grammarAccess.getTextBlRule()); } 
	 EOF 
;

// Rule TextBl
ruleTextBl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextBlAccess().getGroup()); }
(rule__TextBl__Group__0)
{ after(grammarAccess.getTextBlAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMatrix
entryRuleMatrix 
:
{ before(grammarAccess.getMatrixRule()); }
	 ruleMatrix
{ after(grammarAccess.getMatrixRule()); } 
	 EOF 
;

// Rule Matrix
ruleMatrix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMatrixAccess().getGroup()); }
(rule__Matrix__Group__0)
{ after(grammarAccess.getMatrixAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComboBox
entryRuleComboBox 
:
{ before(grammarAccess.getComboBoxRule()); }
	 ruleComboBox
{ after(grammarAccess.getComboBoxRule()); } 
	 EOF 
;

// Rule ComboBox
ruleComboBox
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComboBoxAccess().getNameAssignment()); }
(rule__ComboBox__NameAssignment)
{ after(grammarAccess.getComboBoxAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDropDown
entryRuleDropDown 
:
{ before(grammarAccess.getDropDownRule()); }
	 ruleDropDown
{ after(grammarAccess.getDropDownRule()); } 
	 EOF 
;

// Rule DropDown
ruleDropDown
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDropDownAccess().getNameAssignment()); }
(rule__DropDown__NameAssignment)
{ after(grammarAccess.getDropDownAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRadio
entryRuleRadio 
:
{ before(grammarAccess.getRadioRule()); }
	 ruleRadio
{ after(grammarAccess.getRadioRule()); } 
	 EOF 
;

// Rule Radio
ruleRadio
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRadioAccess().getNameAssignment()); }
(rule__Radio__NameAssignment)
{ after(grammarAccess.getRadioAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentifier
entryRuleIdentifier 
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule Identifier
ruleIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierAccess().getAlternatives()); }
(rule__Identifier__Alternatives)
{ after(grammarAccess.getIdentifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMandatory
entryRuleMandatory 
:
{ before(grammarAccess.getMandatoryRule()); }
	 ruleMandatory
{ after(grammarAccess.getMandatoryRule()); } 
	 EOF 
;

// Rule Mandatory
ruleMandatory
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMandatoryAccess().getAlternatives()); }
(rule__Mandatory__Alternatives)
{ after(grammarAccess.getMandatoryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Identifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getIdentifierAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIdentifierAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getIdentifierAccess().getSTRINGTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIdentifierAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getIdentifierAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mandatory__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryAccess().getYesKeyword_0()); }

	'Yes' 

{ after(grammarAccess.getMandatoryAccess().getYesKeyword_0()); }
)

    |(
{ before(grammarAccess.getMandatoryAccess().getNoKeyword_1()); }

	'No' 

{ after(grammarAccess.getMandatoryAccess().getNoKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTextLnParserRuleCall_0()); }
	ruleTextLn
{ after(grammarAccess.getTypeAccess().getTextLnParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getComboBoxParserRuleCall_1()); }
	ruleComboBox
{ after(grammarAccess.getTypeAccess().getComboBoxParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getDropDownParserRuleCall_2()); }
	ruleDropDown
{ after(grammarAccess.getTypeAccess().getDropDownParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTextBlParserRuleCall_3()); }
	ruleTextBl
{ after(grammarAccess.getTypeAccess().getTextBlParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getMatrixParserRuleCall_4()); }
	ruleMatrix
{ after(grammarAccess.getTypeAccess().getMatrixParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getRadioParserRuleCall_5()); }
	ruleRadio
{ after(grammarAccess.getTypeAccess().getRadioParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Questionnaire__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__0__Impl
	rule__Questionnaire__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getQuestionnaireKeyword_0()); }

	'Questionnaire:' 

{ after(grammarAccess.getQuestionnaireAccess().getQuestionnaireKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__1__Impl
	rule__Questionnaire__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getNameAssignment_1()); }
(rule__Questionnaire__NameAssignment_1)
{ after(grammarAccess.getQuestionnaireAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__2__Impl
	rule__Questionnaire__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getQuestionnaireAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__3__Impl
	rule__Questionnaire__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getIDKeyword_3()); }

	'ID:' 

{ after(grammarAccess.getQuestionnaireAccess().getIDKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__4__Impl
	rule__Questionnaire__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getIdAssignment_4()); }
(rule__Questionnaire__IdAssignment_4)
{ after(grammarAccess.getQuestionnaireAccess().getIdAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__5__Impl
	rule__Questionnaire__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getQuestionnaireAccess().getPartAssignment_5()); }
(rule__Questionnaire__PartAssignment_5)
{ after(grammarAccess.getQuestionnaireAccess().getPartAssignment_5()); }
)
(
{ before(grammarAccess.getQuestionnaireAccess().getPartAssignment_5()); }
(rule__Questionnaire__PartAssignment_5)*
{ after(grammarAccess.getQuestionnaireAccess().getPartAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getQuestionnaireAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Part__Group__0__Impl
	rule__Part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getPartKeyword_0()); }

	'Part:' 

{ after(grammarAccess.getPartAccess().getPartKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Part__Group__1__Impl
	rule__Part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getNameAssignment_1()); }
(rule__Part__NameAssignment_1)
{ after(grammarAccess.getPartAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Part__Group__2__Impl
	rule__Part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPartAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Part__Group__3__Impl
	rule__Part__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getIDKeyword_3()); }

	'ID:' 

{ after(grammarAccess.getPartAccess().getIDKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Part__Group__4__Impl
	rule__Part__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getIdAssignment_4()); }
(rule__Part__IdAssignment_4)
{ after(grammarAccess.getPartAccess().getIdAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Part__Group__5__Impl
	rule__Part__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPartAccess().getQuestionAssignment_5()); }
(rule__Part__QuestionAssignment_5)
{ after(grammarAccess.getPartAccess().getQuestionAssignment_5()); }
)
(
{ before(grammarAccess.getPartAccess().getQuestionAssignment_5()); }
(rule__Part__QuestionAssignment_5)*
{ after(grammarAccess.getPartAccess().getQuestionAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Part__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getPartAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Question__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__0__Impl
	rule__Question__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getQuestionKeyword_0()); }

	'Question:' 

{ after(grammarAccess.getQuestionAccess().getQuestionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__1__Impl
	rule__Question__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getNameAssignment_1()); }
(rule__Question__NameAssignment_1)
{ after(grammarAccess.getQuestionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__2__Impl
	rule__Question__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getQuestionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__3__Impl
	rule__Question__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getIDKeyword_3()); }

	'ID:' 

{ after(grammarAccess.getQuestionAccess().getIDKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__4__Impl
	rule__Question__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getIdAssignment_4()); }
(rule__Question__IdAssignment_4)
{ after(grammarAccess.getQuestionAccess().getIdAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__5__Impl
	rule__Question__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getMandatoryKeyword_5()); }

	'Mandatory:' 

{ after(grammarAccess.getQuestionAccess().getMandatoryKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__6__Impl
	rule__Question__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getMandatoryAssignment_6()); }
(rule__Question__MandatoryAssignment_6)
{ after(grammarAccess.getQuestionAccess().getMandatoryAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__7__Impl
	rule__Question__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getTypeKeyword_7()); }

	'Type:' 

{ after(grammarAccess.getQuestionAccess().getTypeKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__8__Impl
	rule__Question__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getTypeAssignment_8()); }
(rule__Question__TypeAssignment_8)
{ after(grammarAccess.getQuestionAccess().getTypeAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__9__Impl
	rule__Question__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getAnswerAssignment_9()); }
(rule__Question__AnswerAssignment_9)*
{ after(grammarAccess.getQuestionAccess().getAnswerAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getQuestionAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Answer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group__0__Impl
	rule__Answer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getIDKeyword_0()); }

	'ID:' 

{ after(grammarAccess.getAnswerAccess().getIDKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Answer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group__1__Impl
	rule__Answer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getIdAssignment_1()); }
(rule__Answer__IdAssignment_1)
{ after(grammarAccess.getAnswerAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Answer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group__2__Impl
	rule__Answer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getAnswerKeyword_2()); }

	'Answer:' 

{ after(grammarAccess.getAnswerAccess().getAnswerKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Answer__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getNameAssignment_3()); }
(rule__Answer__NameAssignment_3)
{ after(grammarAccess.getAnswerAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TextLn__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextLn__Group__0__Impl
	rule__TextLn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextLn__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextLnAccess().getTextLnKeyword_0()); }

	'TextLn' 

{ after(grammarAccess.getTextLnAccess().getTextLnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextLn__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextLn__Group__1__Impl
	rule__TextLn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextLn__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextLnAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTextLnAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextLn__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextLn__Group__2__Impl
	rule__TextLn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TextLn__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextLnAccess().getLengthAssignment_2()); }
(rule__TextLn__LengthAssignment_2)
{ after(grammarAccess.getTextLnAccess().getLengthAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextLn__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextLn__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextLn__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextLnAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTextLnAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TextBl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextBl__Group__0__Impl
	rule__TextBl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextBl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextBlAccess().getTextBlKeyword_0()); }

	'TextBl' 

{ after(grammarAccess.getTextBlAccess().getTextBlKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextBl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextBl__Group__1__Impl
	rule__TextBl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextBl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextBlAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTextBlAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextBl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextBl__Group__2__Impl
	rule__TextBl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TextBl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextBlAccess().getLengthAssignment_2()); }
(rule__TextBl__LengthAssignment_2)
{ after(grammarAccess.getTextBlAccess().getLengthAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextBl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextBl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextBl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextBlAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTextBlAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Matrix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__0__Impl
	rule__Matrix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getMatrixKeyword_0()); }

	'Matrix' 

{ after(grammarAccess.getMatrixAccess().getMatrixKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__1__Impl
	rule__Matrix__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getMatrixAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__2__Impl
	rule__Matrix__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getScaleKeyword_2()); }

	'Scale:' 

{ after(grammarAccess.getMatrixAccess().getScaleKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__3__Impl
	rule__Matrix__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getMatrixAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__4__Impl
	rule__Matrix__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getIdentifierParserRuleCall_4()); }
	ruleIdentifier
{ after(grammarAccess.getMatrixAccess().getIdentifierParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__5__Impl
	rule__Matrix__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getGroup_5()); }
(rule__Matrix__Group_5__0)*
{ after(grammarAccess.getMatrixAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__6__Impl
	rule__Matrix__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getMatrixAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__7__Impl
	rule__Matrix__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getQuestionsKeyword_7()); }

	'Questions:' 

{ after(grammarAccess.getMatrixAccess().getQuestionsKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__8__Impl
	rule__Matrix__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getLeftParenthesisKeyword_8()); }

	'(' 

{ after(grammarAccess.getMatrixAccess().getLeftParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__9__Impl
	rule__Matrix__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getAnswerAssignment_9()); }
(rule__Matrix__AnswerAssignment_9)
{ after(grammarAccess.getMatrixAccess().getAnswerAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__10__Impl
	rule__Matrix__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getGroup_10()); }
(rule__Matrix__Group_10__0)*
{ after(grammarAccess.getMatrixAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__11__Impl
	rule__Matrix__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getRightParenthesisKeyword_11()); }

	')' 

{ after(grammarAccess.getMatrixAccess().getRightParenthesisKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getRightParenthesisKeyword_12()); }

	')' 

{ after(grammarAccess.getMatrixAccess().getRightParenthesisKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__Matrix__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group_5__0__Impl
	rule__Matrix__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getVerticalLineKeyword_5_0()); }

	'|' 

{ after(grammarAccess.getMatrixAccess().getVerticalLineKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getIdentifierParserRuleCall_5_1()); }
	ruleIdentifier
{ after(grammarAccess.getMatrixAccess().getIdentifierParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Matrix__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group_10__0__Impl
	rule__Matrix__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getVerticalLineKeyword_10_0()); }

	'|' 

{ after(grammarAccess.getMatrixAccess().getVerticalLineKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matrix__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matrix__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getAnswerAssignment_10_1()); }
(rule__Matrix__AnswerAssignment_10_1)
{ after(grammarAccess.getMatrixAccess().getAnswerAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Survey__QuestionnaireAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getQuestionnaireQuestionnaireParserRuleCall_0()); }
	ruleQuestionnaire{ after(grammarAccess.getSurveyAccess().getQuestionnaireQuestionnaireParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getQuestionnaireAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__IdAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getIdIdentifierParserRuleCall_4_0()); }
	ruleIdentifier{ after(grammarAccess.getQuestionnaireAccess().getIdIdentifierParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__PartAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getPartPartParserRuleCall_5_0()); }
	rulePart{ after(grammarAccess.getQuestionnaireAccess().getPartPartParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Part__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getPartAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Part__IdAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getIdIdentifierParserRuleCall_4_0()); }
	ruleIdentifier{ after(grammarAccess.getPartAccess().getIdIdentifierParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Part__QuestionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getQuestionQuestionParserRuleCall_5_0()); }
	ruleQuestion{ after(grammarAccess.getPartAccess().getQuestionQuestionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getQuestionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__IdAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getIdIdentifierParserRuleCall_4_0()); }
	ruleIdentifier{ after(grammarAccess.getQuestionAccess().getIdIdentifierParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__MandatoryAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getMandatoryMandatoryParserRuleCall_6_0()); }
	ruleMandatory{ after(grammarAccess.getQuestionAccess().getMandatoryMandatoryParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__TypeAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getTypeTypeParserRuleCall_8_0()); }
	ruleType{ after(grammarAccess.getQuestionAccess().getTypeTypeParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__AnswerAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getAnswerAnswerParserRuleCall_9_0()); }
	ruleAnswer{ after(grammarAccess.getQuestionAccess().getAnswerAnswerParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getIdIdentifierParserRuleCall_1_0()); }
	ruleIdentifier{ after(grammarAccess.getAnswerAccess().getIdIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getNameIdentifierParserRuleCall_3_0()); }
	ruleIdentifier{ after(grammarAccess.getAnswerAccess().getNameIdentifierParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextLn__LengthAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextLnAccess().getLengthINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getTextLnAccess().getLengthINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextBl__LengthAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextBlAccess().getLengthINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getTextBlAccess().getLengthINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__AnswerAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getAnswerAnswerParserRuleCall_9_0()); }
	ruleAnswer{ after(grammarAccess.getMatrixAccess().getAnswerAnswerParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Matrix__AnswerAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatrixAccess().getAnswerAnswerParserRuleCall_10_1_0()); }
	ruleAnswer{ after(grammarAccess.getMatrixAccess().getAnswerAnswerParserRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComboBox__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComboBoxAccess().getNameComboBoxKeyword_0()); }
(
{ before(grammarAccess.getComboBoxAccess().getNameComboBoxKeyword_0()); }

	'ComboBox' 

{ after(grammarAccess.getComboBoxAccess().getNameComboBoxKeyword_0()); }
)

{ after(grammarAccess.getComboBoxAccess().getNameComboBoxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DropDown__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDropDownAccess().getNameDropDownKeyword_0()); }
(
{ before(grammarAccess.getDropDownAccess().getNameDropDownKeyword_0()); }

	'DropDown' 

{ after(grammarAccess.getDropDownAccess().getNameDropDownKeyword_0()); }
)

{ after(grammarAccess.getDropDownAccess().getNameDropDownKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Radio__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRadioAccess().getNameRadioKeyword_0()); }
(
{ before(grammarAccess.getRadioAccess().getNameRadioKeyword_0()); }

	'Radio' 

{ after(grammarAccess.getRadioAccess().getNameRadioKeyword_0()); }
)

{ after(grammarAccess.getRadioAccess().getNameRadioKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


