/*
* generated by Xtext
*/
grammar InternalSurvey;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.nordakademie.mwi13a.team1.survey.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.nordakademie.mwi13a.team1.survey.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.nordakademie.mwi13a.team1.survey.services.SurveyGrammarAccess;

}

@parser::members {

 	private SurveyGrammarAccess grammarAccess;
 	
    public InternalSurveyParser(TokenStream input, SurveyGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Survey";	
   	}
   	
   	@Override
   	protected SurveyGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSurvey
entryRuleSurvey returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSurveyRule()); }
	 iv_ruleSurvey=ruleSurvey 
	 { $current=$iv_ruleSurvey.current; } 
	 EOF 
;

// Rule Survey
ruleSurvey returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyAccess().getQuestionnaireQuestionnaireParserRuleCall_0()); 
	    }
		lv_questionnaire_0_0=ruleQuestionnaire		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyRule());
	        }
       		add(
       			$current, 
       			"questionnaire",
        		lv_questionnaire_0_0, 
        		"Questionnaire");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleQuestionnaire
entryRuleQuestionnaire returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuestionnaireRule()); }
	 iv_ruleQuestionnaire=ruleQuestionnaire 
	 { $current=$iv_ruleQuestionnaire.current; } 
	 EOF 
;

// Rule Questionnaire
ruleQuestionnaire returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Questionnaire:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQuestionnaireAccess().getQuestionnaireKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getQuestionnaireAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuestionnaireRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQuestionnaireAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='Questionnaire-ID:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQuestionnaireAccess().getQuestionnaireIDKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionnaireAccess().getIdIdentifierParserRuleCall_4_0()); 
	    }
		lv_id_4_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_4_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionnaireAccess().getPartPartParserRuleCall_5_0()); 
	    }
		lv_part_5_0=rulePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
	        }
       		add(
       			$current, 
       			"part",
        		lv_part_5_0, 
        		"Part");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getQuestionnaireAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRulePart
entryRulePart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartRule()); }
	 iv_rulePart=rulePart 
	 { $current=$iv_rulePart.current; } 
	 EOF 
;

// Rule Part
rulePart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Part:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPartAccess().getPartKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPartAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPartAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='Part-ID:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPartAccess().getPartIDKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPartAccess().getIdIdentifierParserRuleCall_4_0()); 
	    }
		lv_id_4_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPartRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_4_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPartAccess().getQuestionQuestionParserRuleCall_5_0()); 
	    }
		lv_question_5_0=ruleQuestion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPartRule());
	        }
       		add(
       			$current, 
       			"question",
        		lv_question_5_0, 
        		"Question");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPartAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleQuestion
entryRuleQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuestionRule()); }
	 iv_ruleQuestion=ruleQuestion 
	 { $current=$iv_ruleQuestion.current; } 
	 EOF 
;

// Rule Question
ruleQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Question:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQuestionAccess().getQuestionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getQuestionAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuestionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQuestionAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='Question-ID:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQuestionAccess().getQuestionIDKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionAccess().getIdIdentifierParserRuleCall_4_0()); 
	    }
		lv_id_4_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_4_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_mandatory_5_0=	'Mandatory Field' 
    {
        newLeafNode(lv_mandatory_5_0, grammarAccess.getQuestionAccess().getMandatoryMandatoryFieldKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuestionRule());
	        }
       		setWithLastConsumed($current, "mandatory", true, "Mandatory Field");
	    }

)
)?	otherlv_6='Type:' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getQuestionAccess().getTypeKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionAccess().getQuestionTypeSurveyTerminalTypesParserRuleCall_7_0()); 
	    }
		lv_questionType_7_0=ruleSurveyTerminalTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionRule());
	        }
       		set(
       			$current, 
       			"questionType",
        		lv_questionType_7_0, 
        		"SurveyTerminalTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getQuestionAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleMatrixQuestion
entryRuleMatrixQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatrixQuestionRule()); }
	 iv_ruleMatrixQuestion=ruleMatrixQuestion 
	 { $current=$iv_ruleMatrixQuestion.current; } 
	 EOF 
;

// Rule MatrixQuestion
ruleMatrixQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Question-ID:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMatrixQuestionAccess().getQuestionIDKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrixQuestionAccess().getIdIdentifierParserRuleCall_1_0()); 
	    }
		lv_id_1_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrixQuestionRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='Question:' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMatrixQuestionAccess().getQuestionKeyword_2());
    }
(
(
		lv_name_3_0=RULE_STRING
		{
			newLeafNode(lv_name_3_0, grammarAccess.getMatrixQuestionAccess().getNameSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatrixQuestionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"STRING");
	    }

)
))
;







// Entry rule entryRuleAnswer
entryRuleAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnswerRule()); }
	 iv_ruleAnswer=ruleAnswer 
	 { $current=$iv_ruleAnswer.current; } 
	 EOF 
;

// Rule Answer
ruleAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Answer-ID:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnswerAccess().getAnswerIDKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnswerAccess().getIdIdentifierParserRuleCall_1_0()); 
	    }
		lv_id_1_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnswerRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='Answer:' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnswerAccess().getAnswerKeyword_2());
    }
(
(
		lv_name_3_0=RULE_STRING
		{
			newLeafNode(lv_name_3_0, grammarAccess.getAnswerAccess().getNameSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnswerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleSurveyTerminalTypes
entryRuleSurveyTerminalTypes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSurveyTerminalTypesRule()); }
	 iv_ruleSurveyTerminalTypes=ruleSurveyTerminalTypes 
	 { $current=$iv_ruleSurveyTerminalTypes.current; } 
	 EOF 
;

// Rule SurveyTerminalTypes
ruleSurveyTerminalTypes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSurveyTerminalTypesAccess().getTextLineAction_0_0(),
            $current);
    }
)(
(
		lv_name_1_0=	'TextLine' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getSurveyTerminalTypesAccess().getNameTextLineKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "TextLine");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSurveyTerminalTypesAccess().getLeftParenthesisKeyword_0_2());
    }
(
(
		lv_length_3_0=RULE_INT
		{
			newLeafNode(lv_length_3_0, grammarAccess.getSurveyTerminalTypesAccess().getLengthINTTerminalRuleCall_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"length",
        		lv_length_3_0, 
        		"INT");
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSurveyTerminalTypesAccess().getRightParenthesisKeyword_0_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSurveyTerminalTypesAccess().getTextBlockAction_1_0(),
            $current);
    }
)(
(
		lv_name_6_0=	'TextBlock' 
    {
        newLeafNode(lv_name_6_0, grammarAccess.getSurveyTerminalTypesAccess().getNameTextBlockKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_6_0, "TextBlock");
	    }

)
)	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSurveyTerminalTypesAccess().getLeftParenthesisKeyword_1_2());
    }
(
(
		lv_length_8_0=RULE_INT
		{
			newLeafNode(lv_length_8_0, grammarAccess.getSurveyTerminalTypesAccess().getLengthINTTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"length",
        		lv_length_8_0, 
        		"INT");
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSurveyTerminalTypesAccess().getRightParenthesisKeyword_1_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSurveyTerminalTypesAccess().getMatrixAction_2_0(),
            $current);
    }
)(
(
		lv_name_11_0=	'Matrix' 
    {
        newLeafNode(lv_name_11_0, grammarAccess.getSurveyTerminalTypesAccess().getNameMatrixKeyword_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_11_0, "Matrix");
	    }

)
)	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSurveyTerminalTypesAccess().getLeftCurlyBracketKeyword_2_2());
    }
	otherlv_13='Scale:' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSurveyTerminalTypesAccess().getScaleKeyword_2_3());
    }
	otherlv_14='(' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSurveyTerminalTypesAccess().getLeftParenthesisKeyword_2_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyTerminalTypesAccess().getAnswerAnswerParserRuleCall_2_5_0()); 
	    }
		lv_answer_15_0=ruleAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		add(
       			$current, 
       			"answer",
        		lv_answer_15_0, 
        		"Answer");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16='|' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getSurveyTerminalTypesAccess().getVerticalLineKeyword_2_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyTerminalTypesAccess().getAnswerAnswerParserRuleCall_2_6_1_0()); 
	    }
		lv_answer_17_0=ruleAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		add(
       			$current, 
       			"answer",
        		lv_answer_17_0, 
        		"Answer");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18=')' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSurveyTerminalTypesAccess().getRightParenthesisKeyword_2_7());
    }
	otherlv_19='Questions:' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getSurveyTerminalTypesAccess().getQuestionsKeyword_2_8());
    }
	otherlv_20='(' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getSurveyTerminalTypesAccess().getLeftParenthesisKeyword_2_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyTerminalTypesAccess().getMatrixQuestionMatrixQuestionParserRuleCall_2_10_0()); 
	    }
		lv_matrixQuestion_21_0=ruleMatrixQuestion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		add(
       			$current, 
       			"matrixQuestion",
        		lv_matrixQuestion_21_0, 
        		"MatrixQuestion");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_22='|' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getSurveyTerminalTypesAccess().getVerticalLineKeyword_2_11_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyTerminalTypesAccess().getMatrixQuestionMatrixQuestionParserRuleCall_2_11_1_0()); 
	    }
		lv_matrixQuestion_23_0=ruleMatrixQuestion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		add(
       			$current, 
       			"matrixQuestion",
        		lv_matrixQuestion_23_0, 
        		"MatrixQuestion");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_24=')' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getSurveyTerminalTypesAccess().getRightParenthesisKeyword_2_12());
    }
	otherlv_25='}' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getSurveyTerminalTypesAccess().getRightCurlyBracketKeyword_2_13());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSurveyTerminalTypesAccess().getComboBoxAction_3_0(),
            $current);
    }
)(
(
		lv_name_27_0=	'ComboBox' 
    {
        newLeafNode(lv_name_27_0, grammarAccess.getSurveyTerminalTypesAccess().getNameComboBoxKeyword_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_27_0, "ComboBox");
	    }

)
)	otherlv_28='{' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getSurveyTerminalTypesAccess().getLeftCurlyBracketKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyTerminalTypesAccess().getAnswerAnswerParserRuleCall_3_3_0()); 
	    }
		lv_answer_29_0=ruleAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		add(
       			$current, 
       			"answer",
        		lv_answer_29_0, 
        		"Answer");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_30='}' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getSurveyTerminalTypesAccess().getRightCurlyBracketKeyword_3_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSurveyTerminalTypesAccess().getDropDownAction_4_0(),
            $current);
    }
)(
(
		lv_name_32_0=	'DropDown' 
    {
        newLeafNode(lv_name_32_0, grammarAccess.getSurveyTerminalTypesAccess().getNameDropDownKeyword_4_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_32_0, "DropDown");
	    }

)
)	otherlv_33='{' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getSurveyTerminalTypesAccess().getLeftCurlyBracketKeyword_4_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyTerminalTypesAccess().getAnswerAnswerParserRuleCall_4_3_0()); 
	    }
		lv_answer_34_0=ruleAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		add(
       			$current, 
       			"answer",
        		lv_answer_34_0, 
        		"Answer");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_35='}' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getSurveyTerminalTypesAccess().getRightCurlyBracketKeyword_4_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSurveyTerminalTypesAccess().getRadioAction_5_0(),
            $current);
    }
)(
(
		lv_name_37_0=	'Radio' 
    {
        newLeafNode(lv_name_37_0, grammarAccess.getSurveyTerminalTypesAccess().getNameRadioKeyword_5_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_37_0, "Radio");
	    }

)
)	otherlv_38='{' 
    {
    	newLeafNode(otherlv_38, grammarAccess.getSurveyTerminalTypesAccess().getLeftCurlyBracketKeyword_5_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyTerminalTypesAccess().getAnswerAnswerParserRuleCall_5_3_0()); 
	    }
		lv_answer_39_0=ruleAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyTerminalTypesRule());
	        }
       		add(
       			$current, 
       			"answer",
        		lv_answer_39_0, 
        		"Answer");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_40='}' 
    {
    	newLeafNode(otherlv_40, grammarAccess.getSurveyTerminalTypesAccess().getRightCurlyBracketKeyword_5_4());
    }
))
;





// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); } 
	 iv_ruleIdentifier=ruleIdentifier 
	 { $current=$iv_ruleIdentifier.current.getText(); }  
	 EOF 
;

// Rule Identifier
ruleIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getIdentifierAccess().getIDTerminalRuleCall_0()); 
    }

    |    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    newLeafNode(this_STRING_1, grammarAccess.getIdentifierAccess().getSTRINGTerminalRuleCall_1()); 
    }

    |    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getIdentifierAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


