/*
* generated by Xtext
*/
grammar InternalSurvey;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.nordakademie.mwi13a.team1.survey.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.nordakademie.mwi13a.team1.survey.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.nordakademie.mwi13a.team1.survey.services.SurveyGrammarAccess;

}

@parser::members {

 	private SurveyGrammarAccess grammarAccess;
 	
    public InternalSurveyParser(TokenStream input, SurveyGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Survey";	
   	}
   	
   	@Override
   	protected SurveyGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSurvey
entryRuleSurvey returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSurveyRule()); }
	 iv_ruleSurvey=ruleSurvey 
	 { $current=$iv_ruleSurvey.current; } 
	 EOF 
;

// Rule Survey
ruleSurvey returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyAccess().getQuestionnaireQuestionnaireParserRuleCall_0()); 
	    }
		lv_questionnaire_0_0=ruleQuestionnaire		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyRule());
	        }
       		add(
       			$current, 
       			"questionnaire",
        		lv_questionnaire_0_0, 
        		"Questionnaire");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleQuestionnaire
entryRuleQuestionnaire returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuestionnaireRule()); }
	 iv_ruleQuestionnaire=ruleQuestionnaire 
	 { $current=$iv_ruleQuestionnaire.current; } 
	 EOF 
;

// Rule Questionnaire
ruleQuestionnaire returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Questionnaire:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQuestionnaireAccess().getQuestionnaireKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getQuestionnaireAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuestionnaireRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQuestionnaireAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='ID:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQuestionnaireAccess().getIDKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionnaireAccess().getIdIdentifierParserRuleCall_4_0()); 
	    }
		lv_id_4_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_4_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionnaireAccess().getPartPartParserRuleCall_5_0()); 
	    }
		lv_part_5_0=rulePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
	        }
       		add(
       			$current, 
       			"part",
        		lv_part_5_0, 
        		"Part");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getQuestionnaireAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRulePart
entryRulePart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartRule()); }
	 iv_rulePart=rulePart 
	 { $current=$iv_rulePart.current; } 
	 EOF 
;

// Rule Part
rulePart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Part:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPartAccess().getPartKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPartAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPartAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='ID:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPartAccess().getIDKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPartAccess().getIdIdentifierParserRuleCall_4_0()); 
	    }
		lv_id_4_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPartRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_4_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPartAccess().getQuestionQuestionParserRuleCall_5_0()); 
	    }
		lv_question_5_0=ruleQuestion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPartRule());
	        }
       		add(
       			$current, 
       			"question",
        		lv_question_5_0, 
        		"Question");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPartAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleQuestion
entryRuleQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuestionRule()); }
	 iv_ruleQuestion=ruleQuestion 
	 { $current=$iv_ruleQuestion.current; } 
	 EOF 
;

// Rule Question
ruleQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Question:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQuestionAccess().getQuestionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getQuestionAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuestionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQuestionAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='ID:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQuestionAccess().getIDKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionAccess().getIdIdentifierParserRuleCall_4_0()); 
	    }
		lv_id_4_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_4_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='Mandatory:' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getQuestionAccess().getMandatoryKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionAccess().getMandatoryMandatoryParserRuleCall_6_0()); 
	    }
		lv_mandatory_6_0=ruleMandatory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionRule());
	        }
       		set(
       			$current, 
       			"mandatory",
        		lv_mandatory_6_0, 
        		"Mandatory");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='Type:' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getQuestionAccess().getTypeKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionAccess().getTypeTypeParserRuleCall_8_0()); 
	    }
		lv_type_8_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_8_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionAccess().getAnswerAnswerParserRuleCall_9_0()); 
	    }
		lv_answer_9_0=ruleAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionRule());
	        }
       		add(
       			$current, 
       			"answer",
        		lv_answer_9_0, 
        		"Answer");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getQuestionAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleAnswer
entryRuleAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnswerRule()); }
	 iv_ruleAnswer=ruleAnswer 
	 { $current=$iv_ruleAnswer.current; } 
	 EOF 
;

// Rule Answer
ruleAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ID:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnswerAccess().getIDKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnswerAccess().getIdIdentifierParserRuleCall_1_0()); 
	    }
		lv_id_1_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnswerRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='Answer:' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnswerAccess().getAnswerKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnswerAccess().getNameIdentifierParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnswerRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTextLn
entryRuleTextLn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextLnRule()); }
	 iv_ruleTextLn=ruleTextLn 
	 { $current=$iv_ruleTextLn.current; } 
	 EOF 
;

// Rule TextLn
ruleTextLn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TextLn' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTextLnAccess().getTextLnKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTextLnAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_length_2_0=RULE_INT
		{
			newLeafNode(lv_length_2_0, grammarAccess.getTextLnAccess().getLengthINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextLnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"length",
        		lv_length_2_0, 
        		"INT");
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTextLnAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleTextBl
entryRuleTextBl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextBlRule()); }
	 iv_ruleTextBl=ruleTextBl 
	 { $current=$iv_ruleTextBl.current; } 
	 EOF 
;

// Rule TextBl
ruleTextBl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TextBl' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTextBlAccess().getTextBlKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTextBlAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_length_2_0=RULE_INT
		{
			newLeafNode(lv_length_2_0, grammarAccess.getTextBlAccess().getLengthINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextBlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"length",
        		lv_length_2_0, 
        		"INT");
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTextBlAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleMatrix
entryRuleMatrix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatrixRule()); }
	 iv_ruleMatrix=ruleMatrix 
	 { $current=$iv_ruleMatrix.current; } 
	 EOF 
;

// Rule Matrix
ruleMatrix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Matrix' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMatrixAccess().getMatrixKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMatrixAccess().getLeftParenthesisKeyword_1());
    }
	otherlv_2='Scale:' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMatrixAccess().getScaleKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMatrixAccess().getLeftParenthesisKeyword_3());
    }

    { 
        newCompositeNode(grammarAccess.getMatrixAccess().getIdentifierParserRuleCall_4()); 
    }
ruleIdentifier
    { 
        afterParserOrEnumRuleCall();
    }
(	otherlv_5='|' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMatrixAccess().getVerticalLineKeyword_5_0());
    }

    { 
        newCompositeNode(grammarAccess.getMatrixAccess().getIdentifierParserRuleCall_5_1()); 
    }
ruleIdentifier
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMatrixAccess().getRightParenthesisKeyword_6());
    }
	otherlv_8='Questions:' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMatrixAccess().getQuestionsKeyword_7());
    }
	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMatrixAccess().getLeftParenthesisKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrixAccess().getAnswerAnswerParserRuleCall_9_0()); 
	    }
		lv_answer_10_0=ruleAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrixRule());
	        }
       		add(
       			$current, 
       			"answer",
        		lv_answer_10_0, 
        		"Answer");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11='|' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMatrixAccess().getVerticalLineKeyword_10_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrixAccess().getAnswerAnswerParserRuleCall_10_1_0()); 
	    }
		lv_answer_12_0=ruleAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrixRule());
	        }
       		add(
       			$current, 
       			"answer",
        		lv_answer_12_0, 
        		"Answer");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getMatrixAccess().getRightParenthesisKeyword_11());
    }
	otherlv_14=')' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getMatrixAccess().getRightParenthesisKeyword_12());
    }
)
;





// Entry rule entryRuleComboBox
entryRuleComboBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComboBoxRule()); }
	 iv_ruleComboBox=ruleComboBox 
	 { $current=$iv_ruleComboBox.current; } 
	 EOF 
;

// Rule ComboBox
ruleComboBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=	'ComboBox' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getComboBoxAccess().getNameComboBoxKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComboBoxRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "ComboBox");
	    }

)
)
;





// Entry rule entryRuleDropDown
entryRuleDropDown returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDropDownRule()); }
	 iv_ruleDropDown=ruleDropDown 
	 { $current=$iv_ruleDropDown.current; } 
	 EOF 
;

// Rule DropDown
ruleDropDown returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=	'DropDown' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getDropDownAccess().getNameDropDownKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDropDownRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "DropDown");
	    }

)
)
;





// Entry rule entryRuleRadio
entryRuleRadio returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRadioRule()); }
	 iv_ruleRadio=ruleRadio 
	 { $current=$iv_ruleRadio.current; } 
	 EOF 
;

// Rule Radio
ruleRadio returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=	'Radio' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getRadioAccess().getNameRadioKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRadioRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Radio");
	    }

)
)
;





// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); } 
	 iv_ruleIdentifier=ruleIdentifier 
	 { $current=$iv_ruleIdentifier.current.getText(); }  
	 EOF 
;

// Rule Identifier
ruleIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getIdentifierAccess().getIDTerminalRuleCall_0()); 
    }

    |    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    newLeafNode(this_STRING_1, grammarAccess.getIdentifierAccess().getSTRINGTerminalRuleCall_1()); 
    }

    |    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getIdentifierAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleMandatory
entryRuleMandatory returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMandatoryRule()); } 
	 iv_ruleMandatory=ruleMandatory 
	 { $current=$iv_ruleMandatory.current.getText(); }  
	 EOF 
;

// Rule Mandatory
ruleMandatory returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='Yes' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMandatoryAccess().getYesKeyword_0()); 
    }

    |
	kw='No' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMandatoryAccess().getNoKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getTextLnParserRuleCall_0()); 
    }
    this_TextLn_0=ruleTextLn
    { 
        $current = $this_TextLn_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getComboBoxParserRuleCall_1()); 
    }
    this_ComboBox_1=ruleComboBox
    { 
        $current = $this_ComboBox_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getDropDownParserRuleCall_2()); 
    }
    this_DropDown_2=ruleDropDown
    { 
        $current = $this_DropDown_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getTextBlParserRuleCall_3()); 
    }
    this_TextBl_3=ruleTextBl
    { 
        $current = $this_TextBl_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getMatrixParserRuleCall_4()); 
    }
    this_Matrix_4=ruleMatrix
    { 
        $current = $this_Matrix_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getRadioParserRuleCall_5()); 
    }
    this_Radio_5=ruleRadio
    { 
        $current = $this_Radio_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


