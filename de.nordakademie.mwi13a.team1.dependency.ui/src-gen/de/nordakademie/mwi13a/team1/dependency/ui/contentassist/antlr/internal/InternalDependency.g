/*
* generated by Xtext
*/
grammar InternalDependency;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.nordakademie.mwi13a.team1.dependency.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.nordakademie.mwi13a.team1.dependency.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.nordakademie.mwi13a.team1.dependency.services.DependencyGrammarAccess;

}

@parser::members {
 
 	private DependencyGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DependencyGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDependencyModel
entryRuleDependencyModel 
:
{ before(grammarAccess.getDependencyModelRule()); }
	 ruleDependencyModel
{ after(grammarAccess.getDependencyModelRule()); } 
	 EOF 
;

// Rule DependencyModel
ruleDependencyModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getDependencyModelAccess().getElementsAssignment()); }
(rule__DependencyModel__ElementsAssignment)
{ after(grammarAccess.getDependencyModelAccess().getElementsAssignment()); }
)
(
{ before(grammarAccess.getDependencyModelAccess().getElementsAssignment()); }
(rule__DependencyModel__ElementsAssignment)*
{ after(grammarAccess.getDependencyModelAccess().getElementsAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSurveyElements
entryRuleSurveyElements 
:
{ before(grammarAccess.getSurveyElementsRule()); }
	 ruleSurveyElements
{ after(grammarAccess.getSurveyElementsRule()); } 
	 EOF 
;

// Rule SurveyElements
ruleSurveyElements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSurveyElementsAccess().getGroup()); }
(rule__SurveyElements__Group__0)
{ after(grammarAccess.getSurveyElementsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePartElements
entryRulePartElements 
:
{ before(grammarAccess.getPartElementsRule()); }
	 rulePartElements
{ after(grammarAccess.getPartElementsRule()); } 
	 EOF 
;

// Rule PartElements
rulePartElements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPartElementsAccess().getGroup()); }
(rule__PartElements__Group__0)
{ after(grammarAccess.getPartElementsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePartOptions
entryRulePartOptions 
:
{ before(grammarAccess.getPartOptionsRule()); }
	 rulePartOptions
{ after(grammarAccess.getPartOptionsRule()); } 
	 EOF 
;

// Rule PartOptions
rulePartOptions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPartOptionsAccess().getAlternatives()); }
(rule__PartOptions__Alternatives)
{ after(grammarAccess.getPartOptionsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDMNextParts
entryRuleDMNextParts 
:
{ before(grammarAccess.getDMNextPartsRule()); }
	 ruleDMNextParts
{ after(grammarAccess.getDMNextPartsRule()); } 
	 EOF 
;

// Rule DMNextParts
ruleDMNextParts
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDMNextPartsAccess().getGroup()); }
(rule__DMNextParts__Group__0)
{ after(grammarAccess.getDMNextPartsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDependency
entryRuleDependency 
:
{ before(grammarAccess.getDependencyRule()); }
	 ruleDependency
{ after(grammarAccess.getDependencyRule()); } 
	 EOF 
;

// Rule Dependency
ruleDependency
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDependencyAccess().getOrParserRuleCall()); }
	ruleOr
{ after(grammarAccess.getDependencyAccess().getOrParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOr
entryRuleOr 
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrAccess().getGroup()); }
(rule__Or__Group__0)
{ after(grammarAccess.getOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnd
entryRuleAnd 
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndAccess().getGroup()); }
(rule__And__Group__0)
{ after(grammarAccess.getAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimary
entryRulePrimary 
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
(rule__Primary__Alternatives)
{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomic
entryRuleAtomic 
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
(rule__Atomic__Alternatives)
{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PartOptions__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartOptionsAccess().getGroup_0()); }
(rule__PartOptions__Group_0__0)
{ after(grammarAccess.getPartOptionsAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPartOptionsAccess().getGroup_1()); }
(rule__PartOptions__Group_1__0)
{ after(grammarAccess.getPartOptionsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
(rule__Primary__Group_0__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_1()); }
	ruleAtomic
{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
(rule__Atomic__Group_0__0)
{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
(rule__Atomic__Group_1__0)
{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__SurveyElements__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SurveyElements__Group__0__Impl
	rule__SurveyElements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SurveyElements__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyElementsAccess().getSurveyKeyword_0()); }

	'Survey:' 

{ after(grammarAccess.getSurveyElementsAccess().getSurveyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SurveyElements__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SurveyElements__Group__1__Impl
	rule__SurveyElements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SurveyElements__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyElementsAccess().getNameAssignment_1()); }
(rule__SurveyElements__NameAssignment_1)
{ after(grammarAccess.getSurveyElementsAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SurveyElements__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SurveyElements__Group__2__Impl
	rule__SurveyElements__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SurveyElements__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyElementsAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSurveyElementsAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SurveyElements__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SurveyElements__Group__3__Impl
	rule__SurveyElements__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SurveyElements__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSurveyElementsAccess().getPartElementsAssignment_3()); }
(rule__SurveyElements__PartElementsAssignment_3)
{ after(grammarAccess.getSurveyElementsAccess().getPartElementsAssignment_3()); }
)
(
{ before(grammarAccess.getSurveyElementsAccess().getPartElementsAssignment_3()); }
(rule__SurveyElements__PartElementsAssignment_3)*
{ after(grammarAccess.getSurveyElementsAccess().getPartElementsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SurveyElements__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SurveyElements__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SurveyElements__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyElementsAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getSurveyElementsAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PartElements__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartElements__Group__0__Impl
	rule__PartElements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartElements__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartElementsAccess().getPartKeyword_0()); }

	'Part:' 

{ after(grammarAccess.getPartElementsAccess().getPartKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartElements__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartElements__Group__1__Impl
	rule__PartElements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartElements__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartElementsAccess().getNameAssignment_1()); }
(rule__PartElements__NameAssignment_1)
{ after(grammarAccess.getPartElementsAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartElements__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartElements__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartElements__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartElementsAccess().getOptionAssignment_2()); }
(rule__PartElements__OptionAssignment_2)
{ after(grammarAccess.getPartElementsAccess().getOptionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PartOptions__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartOptions__Group_0__0__Impl
	rule__PartOptions__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartOptions__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartOptionsAccess().getDefineNextPartAction_0_0()); }
(

)
{ after(grammarAccess.getPartOptionsAccess().getDefineNextPartAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartOptions__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartOptions__Group_0__1__Impl
	rule__PartOptions__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartOptions__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartOptionsAccess().getNextPartsKeyword_0_1()); }

	'Next parts {' 

{ after(grammarAccess.getPartOptionsAccess().getNextPartsKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartOptions__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartOptions__Group_0__2__Impl
	rule__PartOptions__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PartOptions__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPartOptionsAccess().getNextPartsAssignment_0_2()); }
(rule__PartOptions__NextPartsAssignment_0_2)
{ after(grammarAccess.getPartOptionsAccess().getNextPartsAssignment_0_2()); }
)
(
{ before(grammarAccess.getPartOptionsAccess().getNextPartsAssignment_0_2()); }
(rule__PartOptions__NextPartsAssignment_0_2)*
{ after(grammarAccess.getPartOptionsAccess().getNextPartsAssignment_0_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartOptions__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartOptions__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartOptions__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartOptionsAccess().getRightCurlyBracketKeyword_0_3()); }

	'}' 

{ after(grammarAccess.getPartOptionsAccess().getRightCurlyBracketKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PartOptions__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartOptions__Group_1__0__Impl
	rule__PartOptions__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartOptions__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartOptionsAccess().getLastPartAction_1_0()); }
(

)
{ after(grammarAccess.getPartOptionsAccess().getLastPartAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartOptions__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartOptions__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartOptions__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartOptionsAccess().getLastPartAssignment_1_1()); }
(rule__PartOptions__LastPartAssignment_1_1)
{ after(grammarAccess.getPartOptionsAccess().getLastPartAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DMNextParts__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DMNextParts__Group__0__Impl
	rule__DMNextParts__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DMNextParts__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDMNextPartsAccess().getNextPartKeyword_0()); }

	'Next part:' 

{ after(grammarAccess.getDMNextPartsAccess().getNextPartKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DMNextParts__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DMNextParts__Group__1__Impl
	rule__DMNextParts__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DMNextParts__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDMNextPartsAccess().getNameAssignment_1()); }
(rule__DMNextParts__NameAssignment_1)
{ after(grammarAccess.getDMNextPartsAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DMNextParts__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DMNextParts__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DMNextParts__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDMNextPartsAccess().getGroup_2()); }
(rule__DMNextParts__Group_2__0)?
{ after(grammarAccess.getDMNextPartsAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DMNextParts__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DMNextParts__Group_2__0__Impl
	rule__DMNextParts__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DMNextParts__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDMNextPartsAccess().getPartDependenciesKeyword_2_0()); }

	'Part dependencies' 

{ after(grammarAccess.getDMNextPartsAccess().getPartDependenciesKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DMNextParts__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DMNextParts__Group_2__1__Impl
	rule__DMNextParts__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DMNextParts__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDMNextPartsAccess().getLeftCurlyBracketKeyword_2_1()); }

	'{' 

{ after(grammarAccess.getDMNextPartsAccess().getLeftCurlyBracketKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DMNextParts__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DMNextParts__Group_2__2__Impl
	rule__DMNextParts__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DMNextParts__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getDMNextPartsAccess().getExpressionsAssignment_2_2()); }
(rule__DMNextParts__ExpressionsAssignment_2_2)
{ after(grammarAccess.getDMNextPartsAccess().getExpressionsAssignment_2_2()); }
)
(
{ before(grammarAccess.getDMNextPartsAccess().getExpressionsAssignment_2_2()); }
(rule__DMNextParts__ExpressionsAssignment_2_2)*
{ after(grammarAccess.getDMNextPartsAccess().getExpressionsAssignment_2_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DMNextParts__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DMNextParts__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DMNextParts__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDMNextPartsAccess().getRightCurlyBracketKeyword_2_3()); }

	'}' 

{ after(grammarAccess.getDMNextPartsAccess().getRightCurlyBracketKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getGroup_1()); }
(rule__Or__Group_1__0)*
{ after(grammarAccess.getOrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Or__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getORKeyword_1_1()); }

	'OR' 

{ after(grammarAccess.getOrAccess().getORKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
(rule__Or__RightAssignment_1_2)
{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__And__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
{ after(grammarAccess.getAndAccess().getPrimaryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getGroup_1()); }
(rule__And__Group_1__0)*
{ after(grammarAccess.getAndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__And__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getANDKeyword_1_1()); }

	'AND' 

{ after(grammarAccess.getAndAccess().getANDKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
(rule__And__RightAssignment_1_2)
{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Primary__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getBracketAction_0_0()); }
(

)
{ after(grammarAccess.getPrimaryAccess().getBracketAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1()); }

	'(' 

{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_0__2__Impl
	rule__Primary__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getDependencyAssignment_0_2()); }
(rule__Primary__DependencyAssignment_0_2)
{ after(grammarAccess.getPrimaryAccess().getDependencyAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3()); }

	')' 

{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Atomic__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getDMQuestionAction_0_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getDMQuestionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__1__Impl
	rule__Atomic__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getQuestionKeyword_0_1()); }

	'Question:' 

{ after(grammarAccess.getAtomicAccess().getQuestionKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__2__Impl
	rule__Atomic__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getQuestionAssignment_0_2()); }
(rule__Atomic__QuestionAssignment_0_2)
{ after(grammarAccess.getAtomicAccess().getQuestionAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__3__Impl
	rule__Atomic__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getAnswerKeyword_0_3()); }

	'Answer:' 

{ after(grammarAccess.getAtomicAccess().getAnswerKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getAnswerAssignment_0_4()); }
(rule__Atomic__AnswerAssignment_0_4)
{ after(grammarAccess.getAtomicAccess().getAnswerAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Atomic__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getDMMatrixQuestionAction_1_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getDMMatrixQuestionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__1__Impl
	rule__Atomic__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getMatrixQuestionKeyword_1_1()); }

	'Matrix Question:' 

{ after(grammarAccess.getAtomicAccess().getMatrixQuestionKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__2__Impl
	rule__Atomic__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getQuestionAssignment_1_2()); }
(rule__Atomic__QuestionAssignment_1_2)
{ after(grammarAccess.getAtomicAccess().getQuestionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__3__Impl
	rule__Atomic__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getAnswerKeyword_1_3()); }

	'Answer:' 

{ after(grammarAccess.getAtomicAccess().getAnswerKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getAnswerAssignment_1_4()); }
(rule__Atomic__AnswerAssignment_1_4)
{ after(grammarAccess.getAtomicAccess().getAnswerAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DependencyModel__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependencyModelAccess().getElementsSurveyElementsParserRuleCall_0()); }
	ruleSurveyElements{ after(grammarAccess.getDependencyModelAccess().getElementsSurveyElementsParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SurveyElements__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyElementsAccess().getNameQuestionnaireCrossReference_1_0()); }
(
{ before(grammarAccess.getSurveyElementsAccess().getNameQuestionnaireSTRINGTerminalRuleCall_1_0_1()); }
	RULE_STRING{ after(grammarAccess.getSurveyElementsAccess().getNameQuestionnaireSTRINGTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getSurveyElementsAccess().getNameQuestionnaireCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SurveyElements__PartElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyElementsAccess().getPartElementsPartElementsParserRuleCall_3_0()); }
	rulePartElements{ after(grammarAccess.getSurveyElementsAccess().getPartElementsPartElementsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartElements__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartElementsAccess().getNamePartCrossReference_1_0()); }
(
{ before(grammarAccess.getPartElementsAccess().getNamePartSTRINGTerminalRuleCall_1_0_1()); }
	RULE_STRING{ after(grammarAccess.getPartElementsAccess().getNamePartSTRINGTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getPartElementsAccess().getNamePartCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartElements__OptionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartElementsAccess().getOptionPartOptionsParserRuleCall_2_0()); }
	rulePartOptions{ after(grammarAccess.getPartElementsAccess().getOptionPartOptionsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartOptions__NextPartsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartOptionsAccess().getNextPartsDMNextPartsParserRuleCall_0_2_0()); }
	ruleDMNextParts{ after(grammarAccess.getPartOptionsAccess().getNextPartsDMNextPartsParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartOptions__LastPartAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartOptionsAccess().getLastPartLastPartKeyword_1_1_0()); }
(
{ before(grammarAccess.getPartOptionsAccess().getLastPartLastPartKeyword_1_1_0()); }

	'LastPart' 

{ after(grammarAccess.getPartOptionsAccess().getLastPartLastPartKeyword_1_1_0()); }
)

{ after(grammarAccess.getPartOptionsAccess().getLastPartLastPartKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DMNextParts__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDMNextPartsAccess().getNamePartCrossReference_1_0()); }
(
{ before(grammarAccess.getDMNextPartsAccess().getNamePartSTRINGTerminalRuleCall_1_0_1()); }
	RULE_STRING{ after(grammarAccess.getDMNextPartsAccess().getNamePartSTRINGTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getDMNextPartsAccess().getNamePartCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DMNextParts__ExpressionsAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDMNextPartsAccess().getExpressionsDependencyParserRuleCall_2_2_0()); }
	ruleDependency{ after(grammarAccess.getDMNextPartsAccess().getExpressionsDependencyParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	ruleAnd{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	rulePrimary{ after(grammarAccess.getAndAccess().getRightPrimaryParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__DependencyAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getDependencyOrParserRuleCall_0_2_0()); }
	ruleOr{ after(grammarAccess.getPrimaryAccess().getDependencyOrParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__QuestionAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getQuestionQuestionCrossReference_0_2_0()); }
(
{ before(grammarAccess.getAtomicAccess().getQuestionQuestionSTRINGTerminalRuleCall_0_2_0_1()); }
	RULE_STRING{ after(grammarAccess.getAtomicAccess().getQuestionQuestionSTRINGTerminalRuleCall_0_2_0_1()); }
)
{ after(grammarAccess.getAtomicAccess().getQuestionQuestionCrossReference_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__AnswerAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getAnswerAnswerCrossReference_0_4_0()); }
(
{ before(grammarAccess.getAtomicAccess().getAnswerAnswerSTRINGTerminalRuleCall_0_4_0_1()); }
	RULE_STRING{ after(grammarAccess.getAtomicAccess().getAnswerAnswerSTRINGTerminalRuleCall_0_4_0_1()); }
)
{ after(grammarAccess.getAtomicAccess().getAnswerAnswerCrossReference_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__QuestionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getQuestionMatrixQuestionCrossReference_1_2_0()); }
(
{ before(grammarAccess.getAtomicAccess().getQuestionMatrixQuestionSTRINGTerminalRuleCall_1_2_0_1()); }
	RULE_STRING{ after(grammarAccess.getAtomicAccess().getQuestionMatrixQuestionSTRINGTerminalRuleCall_1_2_0_1()); }
)
{ after(grammarAccess.getAtomicAccess().getQuestionMatrixQuestionCrossReference_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__AnswerAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getAnswerAnswerCrossReference_1_4_0()); }
(
{ before(grammarAccess.getAtomicAccess().getAnswerAnswerSTRINGTerminalRuleCall_1_4_0_1()); }
	RULE_STRING{ after(grammarAccess.getAtomicAccess().getAnswerAnswerSTRINGTerminalRuleCall_1_4_0_1()); }
)
{ after(grammarAccess.getAtomicAccess().getAnswerAnswerCrossReference_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


