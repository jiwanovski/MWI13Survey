/*
 * generated by Xtext
 */
package de.nordakademie.mwi13a.team1.dependency.validation

import de.nordakademie.mwi13a.team1.dependency.dependency.SDPart
import org.eclipse.xtext.validation.Check
import de.nordakademie.mwi13a.team1.dependency.dependency.SurveyDependency
import de.nordakademie.mwi13a.team1.survey.survey.Questionnaire
import de.nordakademie.mwi13a.team1.dependency.dependency.DependencyPackage

//import org.eclipse.xtext.validation.Check

/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class DependencyValidator extends AbstractDependencyValidator {

	@Check
	def checkPartSurvey(SDPart part) {
		val surveyName = (part.eContainer() as SurveyDependency).survey.name
		val questionaireName = (part.part2.eContainer() as Questionnaire).name
		
		if (!surveyName.equals(questionaireName)) {
			error("Meine Fehlermeldung. Endlich!!!",
				DependencyPackage.Literals.SD_PART__PART2
			)
		}
	}
//  public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					MyDslPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}
}
